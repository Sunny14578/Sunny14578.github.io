[
  
  {
    "title": "Java - LocalDateTime 자료형 다뤄보기",
    "url": "/posts/blog5/",
    "categories": "Java",
    "tags": "LocalDateTime, 날짜",
    "date": "2024-07-19 13:00:00 +0900",
    





    
    "snippet": "출처 docsLocalDateTime 자료형 이용해보기현재 시간 구하기LocalDateTime time = LocalDateTime.now();System.out.println(\"현재 날짜와 시간: \" + time);//현재 날짜와 시간: 2024-07-19T13:08:16.596698시간 만들기LocalDateTime dateTime = LocalD...",
    "content": "출처 docsLocalDateTime 자료형 이용해보기현재 시간 구하기LocalDateTime time = LocalDateTime.now();System.out.println(\"현재 날짜와 시간: \" + time);//현재 날짜와 시간: 2024-07-19T13:08:16.596698시간 만들기LocalDateTime dateTime = LocalDateTime.of(2024, 7, 19, 10, 30);System.out.println(\"설정한 날짜와 시간: \" + dateTime);//설정한 날짜와 시간: 2024-07-19T10:30시간 덧셈, 뺄샘LocalDateTime future = time.plusDays(10).plusHours(5);LocalDateTime past = time.minusMonths(2).minusMinutes(15);System.out.println(\"현재 날짜와 시간: \" + time);System.out.println(\"10일 5시간 후: \" + future);System.out.println(\"2개월 15분 전: \" + past);//현재 날짜와 시간: 2024-07-19T13:08:16.596698//10일 5시간 후: 2024-07-29T18:08:16.596698//2개월 15분 전: 2024-05-19T12:53:16.596698오늘의 시작 시간 / 끝 시간 구하기LocalDateTime startDay = time.with(LocalTime.MIN);LocalDateTime endtDay = time.with(LocalTime.MAX);System.out.println(\"오늘의 시작 시간: \" + startDay);System.out.println(\"오늘의 끝 시간: \" + endtDay);//오늘의 시작 시간: 2024-07-19T00:00//오늘의 끝 시간: 2024-07-19T23:59:59.999999999시작날짜 값과 끝 날짜 값을 받아서 활용할 때다음과 같은 날짜 input 태그를 사용하여 데이터를 가져오고 싶을 때&lt;input type=\"date\" id=\"startDate\"&gt;&lt;input type=\"date\" id=\"endDate\"&gt;일반적으로 데이터를 조회할때 시작날짜와 끝날짜를 클릭해서 조회하게 되는데17일과 19일을 클릭해서 조회할경우 17일 00시 부터의 데이터와 19일 23:59:59시 까지의 데이터를 가져와야한다. input 태그로 부터 가져온 날짜는 00시로 되어있기 때문에 끝 날짜를 수정해주지 않으면 17일 00시 ~ 19일 00시 범위가 되어버려서19일 데이터는 가져오지 못한다.  해결방법 : endDate의 시간을 23:59:59시로 변경해주는 작업이 필요하다.LocalDateTime startDate = LocalDateTime.of(2024, 7, 17, 0, 0); // 날짜 가데이터 생성LocalDateTime endDate = LocalDateTime.of(2024, 7, 19, 0, 0); endDate = endDate.with(LocalTime.MAX)System.out.println(\"시간 수정: \" + endtDay);//시간 수정: 2024-07-19T23:59:59.999999999"
  },
  
  {
    "title": "Github Blog 만들기 - Jekyll thema 커스텀 해보기",
    "url": "/posts/blog4/",
    "categories": "Github Blog",
    "tags": "jekyll",
    "date": "2024-07-16 15:30:00 +0900",
    





    
    "snippet": "사전지식 습득html file 들을 살펴보면 값들이 직접적으로 기입되어있는게 아닌 다른 경로에서 가져오는 형태로 작성되어져 있습니다. site.data.locales[include.lang].meta 이처럼 많은 부분이 site로 시작하는 코드를 확인해볼 수 있는데 이것의 의미를 알아보겠습니다.Jekyll 기본 동작 원리꼭 알아야 하는 것! _conf...",
    "content": "사전지식 습득html file 들을 살펴보면 값들이 직접적으로 기입되어있는게 아닌 다른 경로에서 가져오는 형태로 작성되어져 있습니다. site.data.locales[include.lang].meta 이처럼 많은 부분이 site로 시작하는 코드를 확인해볼 수 있는데 이것의 의미를 알아보겠습니다.Jekyll 기본 동작 원리꼭 알아야 하는 것! _config.yml 파일에서 설정된 내용은 site 객체에 로드됩니다. 해당 파일이 사이트의 전역 설정을 정의하게 됩니다.site.data는 _data 디렉토리에 있는 파일을 로드하고 파일의 확장자는 YAML, JSON, CSV와 같은 파일입니다. 그렇다면 site.data.locales[include.lang].meta 코드를 살펴보면 _data 폴더안 / locales 폴더안 / [include. lang]를 참조하게되는데 이것은 현재 선택된 언어 코드를 나타냅니다. 현재 선택된 언어 코드는 _config.yml file에서 맨위 부근의 코드에서 확인 가능합니다.# Import the themetheme: jekyll-theme-chirpy# The language of the webpage › http://www.lingoes.net/en/translator/langcode.htm# If it has the same name as one of the files in folder `_data/locales`, the layout language will also be changed,# otherwise, the layout language will use the default value of 'en'.lang: ko-KR저는 한국어를 적용하기 위해 ko-KR로 설정된 상태이고 최종적으로 site.data.locales 안에 있는 ko-KR.yml 파일을 참조하게 되고. ko-KR.yml file안의 meta 값을 가져오라는 의미가 되는겁니다.  Sidebar Image 변경하기_config.yml에서 avatar 항목에 본인이 넣고싶은 이미지 경로를 추가하면된다. assets/img에 이미지를 보관했다면 아래와 같은 형태로 작성해준다.avatar: \"assets/img/이미지명\"만약 다음과 같이 경로상에도 문제가 없는 상황인데 이미지를 찾지 못하는 상황이라면 avatar 항목 바로 위의cdn: \"https://chirpy-img.netlify.app\" 부분이 활성화 되어있으면 cdn 경로에서 이미지를 찾기 때문에 찾을 수 없는 것이다.해당 부분을 주석처리해주자. favicon 변경하기위 빨간네모박스안의 icon을 favicon이라고 부른다 이것을 바꾸는 방법에 대해 알아보자.먼저 내가 적용하고 싶은 icon 파일을 준비해야한다.favicon 생성사이트에 접속해서 이미지를 업로드하고 Download button을 누르면적용시킬 favicon icon들을 만들어준다.해당 파일들을 assets/img/favicons 폴더 안에 넣어주면 끝! Footer 변경footer는 _includes/footer.html 경로에서 변경할 수 있다. blog 맨아래의 Powered by 와 같은 문구를 지우려면site.data.locales[include.lang].meta | replace: ':PLATFORM', _platform | replace: ':THEME', _theme와 같은 코드가 ko-KR.yml file에 밑과 같이 정의되어 있다. 해당 부분을 주석처리 하면 나타나지 않을 것이다.meta: Powered by :PLATFORM with :THEME theme"
  },
  
  {
    "title": "Github Blog 만들기 - Google Analytics",
    "url": "/posts/blog3/",
    "categories": "Github Blog",
    "tags": "Google Analytics, Analytics",
    "date": "2024-07-16 11:30:00 +0900",
    





    
    "snippet": "jekyll theme에 Google Analytics 적용하기Google Analytics는 웹사이트와 앱 모두에서 이벤트 기반 데이터를 수집하는 차세대 애널리틱스 [GA4] 이용애널리틱스 계정 만들기구글 애널리틱스 페이지에서 구글 계정 로그인 후 계정 생성화면 중앙의 측정 시작 버튼 클릭계쩡 생성계정 이름 입력 후 다음버튼 클릭속성 만들기속성 이름...",
    "content": "jekyll theme에 Google Analytics 적용하기Google Analytics는 웹사이트와 앱 모두에서 이벤트 기반 데이터를 수집하는 차세대 애널리틱스 [GA4] 이용애널리틱스 계정 만들기구글 애널리틱스 페이지에서 구글 계정 로그인 후 계정 생성화면 중앙의 측정 시작 버튼 클릭계쩡 생성계정 이름 입력 후 다음버튼 클릭속성 만들기속성 이름 입력 / 보고 시간대 대한민국 입력 / 통화 대한민국 원비즈니스 세부정보비즈니스 세부정보 입력은 본인 프로젝트에 맞는 업종 및 규모 선택비즈니스 목표필자는 사용자 행동 검토만 체크하고 진행했다.데이터 수집 시작하기웹에서 진행할 것이기 때문에 웹을 선택했다.데이터 스트림 생성본인 웹사이트 URL 및 스트림 이름을 입력한다.스트림 까지 설정됐으면 웹 스트림정보 창에서 측정 ID 값을 복사한다.복사한 ID값은 _config.yml file에서 analytics tab의 google id에 넣어준다.# Web Analytics Settingsanalytics:  google:    id: 측정ID값여기까지 잘 설정했다면 애널리틱스 페이지에서 통계보고서를 확인할 수 있다.마치며_config.yml 에 적용된 측정 ID값은 _includes/js-selector.html 파일안에서 불러와서 사용되어진다."
  },
  
  {
    "title": "Github Blog 만들기 - Utterances 댓글 기능 추가",
    "url": "/posts/blog2/",
    "categories": "Github Blog",
    "tags": "Utterances, comments",
    "date": "2024-07-15 17:15:00 +0900",
    





    
    "snippet": "utterances 댓글기능 사용해보기utterances : Github의 이슈를 이용해 댓글로 표시하는 기능utterances.app 홈페이지에 접속하면 오른쪽에 install 탭이 있다. 버튼을 클릭하여 설치해준다.필자는 이미 설치되어있어 Configure로 표시설치 후에 github login 창이 뜬다면 login 후 진행댓글기능을 적용할 하나...",
    "content": "utterances 댓글기능 사용해보기utterances : Github의 이슈를 이용해 댓글로 표시하는 기능utterances.app 홈페이지에 접속하면 오른쪽에 install 탭이 있다. 버튼을 클릭하여 설치해준다.필자는 이미 설치되어있어 Configure로 표시설치 후에 github login 창이 뜬다면 login 후 진행댓글기능을 적용할 하나의 레파지토리에 적용하기 위해 select 해준다.정상적으로 설치가 됐다면 기존의 Utterances 페이지로 돌아온다.ConfigurationUtterances 페이지의 중간지점에 configuration tab에서 나의 레파지토리 주소를 입력해준다. 입력형식 저장소ID/저장소명  ex: sunny14578/sunny14578.github.ioEnable Utterances입력 후 페이지를 내리다 보면 Enable Utterances tab 에서 script code를 확인할 수 있다. 두번째 줄의 repo= 부분에 전에 입력한 값이 나와있다면 설정 끝html file에 적용하기위 스크립트를 복사한 후 필자와 같이 Jekyll thema를 이용한 구조에서는 _layouts/post.html 파일의 맨 밑에 넣어주면 된다.    &lt;!-- .post-tail-bottom --&gt;  &lt;/div&gt;  &lt;!-- div.post-tail-wrapper --&gt;  &lt;!-- Utterances 댓글 스니핏 삽입 --&gt;  &lt;script src=\"https://utteranc.es/client.js\"        repo=\"sunny14578/sunny14578.github.io\"        issue-term=\"pathname\"        theme=\"github-light\"        crossorigin=\"anonymous\"        async&gt;  &lt;/script&gt;테스트위 진행사항까지 문제없이 적용됐다면 포스팅 화면 맨아래에 아래와 같이 댓글을 적을 수 있는 탭이 적용됐을것이다.댓글을 적을 수 없다면 빨간박스 안의 버튼이 로그인 버튼으로 활성화 되어있을 것이다.  로그인 후 사용가능!댓글을 추가했다면 utterances를 적용시킨 레파지토리 issues에 저장된다.내가 겪은 문제댓글을 적었으나 저장되지 않는 현상 필자는 fork 해와서 블로그를 적용했는데 이 때 issues tab이 생성되지 않는 경우가 있다. issues tab을 생성해주기 위해 해당 레파지토리의 setting 탭에서 Features의 Issues 체크박스를 활성화 해준다."
  },
  
  {
    "title": "Local에서 LLM 모델 사용해보기 ( 무료!! )",
    "url": "/posts/blog1/",
    "categories": "LangChain",
    "tags": "LLM, LangChain",
    "date": "2024-07-12 00:40:00 +0900",
    





    
    "snippet": "출처 : 테디노트LangServe를 이용해 로컬에서 LLM 모델 사용해보기설치올라마(Ollama)올라마 Link 에서 중앙에 있는 다운로드 버튼으로 별도의 설정없이 진행HugginFace Hub 설치pip install hugginface-hubEEVE(야놀자) modelHugginFace Page 페이지에서 EEVE-Korean-Instruct-10...",
    "content": "출처 : 테디노트LangServe를 이용해 로컬에서 LLM 모델 사용해보기설치올라마(Ollama)올라마 Link 에서 중앙에 있는 다운로드 버튼으로 별도의 설정없이 진행HugginFace Hub 설치pip install hugginface-hubEEVE(야놀자) modelHugginFace Page 페이지에서 EEVE-Korean-Instruct-10.8B-v1.0-Q8_0.gguf모델을 다운로드 받아주자"
  }
  
]

