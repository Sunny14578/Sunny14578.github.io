

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>초이태양</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-07-22T13:29:41+09:00</updated>
  <author>
    <name>Choitaeyang</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Choitaeyang </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Java - LocalDateTime 자료형 다뤄보기</title>
    <link href="http://localhost:4000/posts/blog5/" rel="alternate" type="text/html" title="Java - LocalDateTime 자료형 다뤄보기" />
    <published>2024-07-19T13:00:00+09:00</published>
  
    <updated>2024-07-19T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog5/</id>
    <content src="http://localhost:4000/posts/blog5/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Java" />
    
  

  <summary>출처 docs

LocalDateTime 자료형 이용해보기

현재 시간 구하기


LocalDateTime time = LocalDateTime.now();
System.out.println(&amp;quot;현재 날짜와 시간: &amp;quot; + time);

//현재 날짜와 시간: 2024-07-19T13:08:16.596698


시간 만들기


LocalDateTime dateTime = LocalDateTime.of(2024, 7, 19, 10, 30);
System.out.println(&amp;quot;설정한 날짜와 시간: &amp;quot; + dateTime);

//설정한 날짜와 시간: 2024-07-19T10:30


시간 덧셈, 뺄샘


LocalDateTime future = time.plusDays(10).plusHours(5);
Loc...</summary>

  </entry>

  
  <entry>
    <title>Github Blog 만들기 - Jekyll thema 커스텀 해보기</title>
    <link href="http://localhost:4000/posts/blog4/" rel="alternate" type="text/html" title="Github Blog 만들기 - Jekyll thema 커스텀 해보기" />
    <published>2024-07-16T15:30:00+09:00</published>
  
    <updated>2024-07-16T15:30:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog4/</id>
    <content src="http://localhost:4000/posts/blog4/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Github Blog" />
    
  

  <summary>사전지식 습득
html file 들을 살펴보면 값들이 직접적으로 기입되어있는게 아닌 다른 경로에서 가져오는 형태로 작성되어져 있습니다. 
site.data.locales[include.lang].meta 이처럼 많은 부분이 site로 시작하는 코드를 확인해볼 수 있는데 이것의 의미를 알아보겠습니다.

Jekyll 기본 동작 원리

꼭 알아야 하는 것! _config.yml 파일에서 설정된 내용은 site 객체에 로드됩니다. 해당 파일이 사이트의 전역 설정을 정의하게 됩니다.

site.data는 _data 디렉토리에 있는 파일을 로드하고 파일의 확장자는 YAML, JSON, CSV와 같은 파일입니다. 

그렇다면 site.data.locales[include.lang].meta 코드를 살펴보면 
_da...</summary>

  </entry>

  
  <entry>
    <title>Github Blog 만들기 - Google Analytics</title>
    <link href="http://localhost:4000/posts/blog3/" rel="alternate" type="text/html" title="Github Blog 만들기 - Google Analytics" />
    <published>2024-07-16T11:30:00+09:00</published>
  
    <updated>2024-07-16T15:18:50+09:00</updated>
  
    <id>http://localhost:4000/posts/blog3/</id>
    <content src="http://localhost:4000/posts/blog3/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Github Blog" />
    
  

  <summary>jekyll theme에 Google Analytics 적용하기


Google Analytics는 웹사이트와 앱 모두에서 이벤트 기반 데이터를 수집하는 차세대 애널리틱스 [GA4] 이용

애널리틱스 계정 만들기
구글 애널리틱스 페이지에서 구글 계정 로그인 후 계정 생성

화면 중앙의 측정 시작 버튼 클릭


계쩡 생성

계정 이름 입력 후 다음버튼 클릭


속성 만들기

속성 이름 입력 / 보고 시간대 대한민국 입력 / 통화 대한민국 원


비즈니스 세부정보
비즈니스 세부정보 입력은 본인 프로젝트에 맞는 업종 및 규모 선택

비즈니스 목표
필자는 사용자 행동 검토만 체크하고 진행했다.

데이터 수집 시작하기
웹에서 진행할 것이기 때문에 웹을 선택했다.



데이터 스트림 생성

본인 웹사이트 URL ...</summary>

  </entry>

  
  <entry>
    <title>Github Blog 만들기 - Utterances 댓글 기능 추가</title>
    <link href="http://localhost:4000/posts/blog2/" rel="alternate" type="text/html" title="Github Blog 만들기 - Utterances 댓글 기능 추가" />
    <published>2024-07-15T17:15:00+09:00</published>
  
    <updated>2024-07-16T13:50:35+09:00</updated>
  
    <id>http://localhost:4000/posts/blog2/</id>
    <content src="http://localhost:4000/posts/blog2/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Github Blog" />
    
  

  <summary>utterances 댓글기능 사용해보기


utterances : Github의 이슈를 이용해 댓글로 표시하는 기능

utterances.app 홈페이지에 접속하면 오른쪽에 install 탭이 있다. 버튼을 클릭하여 설치해준다.



필자는 이미 설치되어있어 Configure로 표시

설치 후에 github login 창이 뜬다면 login 후 진행



댓글기능을 적용할 하나의 레파지토리에 적용하기 위해 select 해준다.

정상적으로 설치가 됐다면 기존의 Utterances 페이지로 돌아온다.

Configuration


Utterances 페이지의 중간지점에 configuration tab에서 나의 레파지토리 주소를 입력해준다. 
입력형식 저장소ID/저장소명  
ex: sunny14578/su...</summary>

  </entry>

  
  <entry>
    <title>Local에서 LLM 모델 사용해보기 ( 무료!! )</title>
    <link href="http://localhost:4000/posts/blog1/" rel="alternate" type="text/html" title="Local에서 LLM 모델 사용해보기 ( 무료!! )" />
    <published>2024-07-12T00:40:00+09:00</published>
  
    <updated>2024-07-17T17:55:11+09:00</updated>
  
    <id>http://localhost:4000/posts/blog1/</id>
    <content src="http://localhost:4000/posts/blog1/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="LangChain" />
    
  

  <summary>출처 : 테디노트


LangServe를 이용해 로컬에서 LLM 모델 사용해보기

설치


올라마(Ollama)
올라마 Link 에서 중앙에 있는 다운로드 버튼으로 별도의 설정없이 진행



HugginFace Hub 설치

pip install hugginface-hub


EEVE(야놀자) model

HugginFace Page 페이지에서 EEVE-Korean-Instruct-10.8B-v1.0-Q8_0.gguf모델을 다운로드 받아주자</summary>

  </entry>

</feed>


