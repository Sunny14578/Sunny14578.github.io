

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>초이태양</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-07-23T17:38:18+09:00</updated>
  <author>
    <name>Choitaeyang</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Choitaeyang </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>linux - logrotate.d를 이용한 로그파일 관리 </title>
    <link href="http://localhost:4000/posts/blog7/" rel="alternate" type="text/html" title="linux - logrotate.d를 이용한 로그파일 관리 " />
    <published>2024-07-23T13:00:00+09:00</published>
  
    <updated>2024-07-23T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog7/</id>
    <content src="http://localhost:4000/posts/blog7/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="linux" />
    
  

  <summary>서버를 운영하면서 로그가 계속 쌓여 디스크 용량이 꽉차게 되어 서비스가 중단되는 경험을 하게 되어
로그를 주기적으로 관리해주는 logrotate에 대해서 알아보도록 하겠습니다.

logrotate


리눅스 시스템에서 로그 파일을 자동으로 관리하는 도구이며. 로그 파일이 무한히 커지는 것을 방지하고, 디스크 공간을 효율적으로 사용할 수 있도록 돕습니다.

주요기능

  로그 회전 : 일정 주기마다 새로운 로그 파일을 생성하고, 오래된 로그 파일을 보관
  압축 : 회전된 로그 파일을 압축하여 디스크 공간을 절약
  삭제 : 일정 기간이 지난 로그 파일을 자동으로 삭제
  스크립트 실행 : 로그 회전 후 특정 명령이나 스크립트 실행



  여기서 회전의 의미는 새로운 파일을 생성하다라는 의미


설정하...</summary>

  </entry>

  
  <entry>
    <title>CS - OSI 7계층 알아보기</title>
    <link href="http://localhost:4000/posts/blog6/" rel="alternate" type="text/html" title="CS - OSI 7계층 알아보기" />
    <published>2024-07-22T13:00:00+09:00</published>
  
    <updated>2024-07-22T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog6/</id>
    <content src="http://localhost:4000/posts/blog6/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="CS ( Computer Science )" />
    
  

  <summary>출처 : IT 엔지니어를 위한 네트워크 입문

OSI 7계층에 대해서 알아보기 위해 프로토콜의 개념을 익혀보자.

프로토콜

프로토콜은 규정이나 규약과 관련된 내용을 언급할 때 사용한다. 네트워크에서의 통신 규약도 프로토콜이라는 용어를 사용한다. 
한정된 자원으로 통신을 수행해야 하다 보니 최대한 적은 데이터를 이용해 효율적인 프로토콜을 정의하고 사용해야 했다.  
기존에는 적은 컴퓨팅 자원과 매우 느린 네트워크 속도를 이용했기 때문에 효율을 위해 2진수 비트기반으로 만들어졌다.



OSI 7계층

과거에는 통신용 규약이 표준화되지 않았고 각 벤더에서 별도로 개발했기 때문에 호환되지 않는 시스템이나 애플리케이션이 많아서 통신이 불가능했다. 

이를 하나로 규약으로 통합하려는 노력이 현재의 OSI 7계...</summary>

  </entry>

  
  <entry>
    <title>Java - LocalDateTime 자료형 다뤄보기</title>
    <link href="http://localhost:4000/posts/blog5/" rel="alternate" type="text/html" title="Java - LocalDateTime 자료형 다뤄보기" />
    <published>2024-07-19T13:00:00+09:00</published>
  
    <updated>2024-07-22T13:30:18+09:00</updated>
  
    <id>http://localhost:4000/posts/blog5/</id>
    <content src="http://localhost:4000/posts/blog5/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Java" />
    
  

  <summary>출처 docs

LocalDateTime 자료형 이용해보기

현재 시간 구하기


LocalDateTime time = LocalDateTime.now();
System.out.println(&amp;quot;현재 날짜와 시간: &amp;quot; + time);

//현재 날짜와 시간: 2024-07-19T13:08:16.596698


시간 만들기


LocalDateTime dateTime = LocalDateTime.of(2024, 7, 19, 10, 30);
System.out.println(&amp;quot;설정한 날짜와 시간: &amp;quot; + dateTime);

//설정한 날짜와 시간: 2024-07-19T10:30


시간 덧셈, 뺄샘


LocalDateTime future = time.plusDays(10).plusHours(5);
Loc...</summary>

  </entry>

  
  <entry>
    <title>Github Blog 만들기 - Jekyll thema 커스텀 해보기</title>
    <link href="http://localhost:4000/posts/blog4/" rel="alternate" type="text/html" title="Github Blog 만들기 - Jekyll thema 커스텀 해보기" />
    <published>2024-07-16T15:30:00+09:00</published>
  
    <updated>2024-07-16T15:30:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog4/</id>
    <content src="http://localhost:4000/posts/blog4/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Github Blog" />
    
  

  <summary>사전지식 습득
html file 들을 살펴보면 값들이 직접적으로 기입되어있는게 아닌 다른 경로에서 가져오는 형태로 작성되어져 있습니다. 
site.data.locales[include.lang].meta 이처럼 많은 부분이 site로 시작하는 코드를 확인해볼 수 있는데 이것의 의미를 알아보겠습니다.

Jekyll 기본 동작 원리

꼭 알아야 하는 것! _config.yml 파일에서 설정된 내용은 site 객체에 로드됩니다. 해당 파일이 사이트의 전역 설정을 정의하게 됩니다.

site.data는 _data 디렉토리에 있는 파일을 로드하고 파일의 확장자는 YAML, JSON, CSV와 같은 파일입니다. 

그렇다면 site.data.locales[include.lang].meta 코드를 살펴보면 
_da...</summary>

  </entry>

  
  <entry>
    <title>Github Blog 만들기 - Google Analytics</title>
    <link href="http://localhost:4000/posts/blog3/" rel="alternate" type="text/html" title="Github Blog 만들기 - Google Analytics" />
    <published>2024-07-16T11:30:00+09:00</published>
  
    <updated>2024-07-22T17:57:15+09:00</updated>
  
    <id>http://localhost:4000/posts/blog3/</id>
    <content src="http://localhost:4000/posts/blog3/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="Github Blog" />
    
  

  <summary>jekyll theme에 Google Analytics 적용하기


Google Analytics는 웹사이트와 앱 모두에서 이벤트 기반 데이터를 수집하는 차세대 애널리틱스 [GA4] 이용

애널리틱스 계정 만들기
구글 애널리틱스 페이지에서 구글 계정 로그인 후 계정 생성

화면 중앙의 측정 시작 버튼 클릭


계쩡 생성

계정 이름 입력 후 다음버튼 클릭


속성 만들기

속성 이름 입력 / 보고 시간대 대한민국 입력 / 통화 대한민국 원


비즈니스 세부정보
비즈니스 세부정보 입력은 본인 프로젝트에 맞는 업종 및 규모 선택

비즈니스 목표
필자는 사용자 행동 검토만 체크하고 진행했다.

데이터 수집 시작하기
웹에서 진행할 것이기 때문에 웹을 선택했다.



데이터 스트림 생성

본인 웹사이트 URL ...</summary>

  </entry>

</feed>


