

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>초이태양</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-07-25T16:20:45+09:00</updated>
  <author>
    <name>Choitaeyang</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko-KR"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Choitaeyang </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>linux - logrotate.d를 이용한 로그파일 관리 </title>
    <link href="http://localhost:4000/posts/blog7/" rel="alternate" type="text/html" title="linux - logrotate.d를 이용한 로그파일 관리 " />
    <published>2024-07-23T13:00:00+09:00</published>
  
    <updated>2024-07-23T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog7/</id>
    <content src="http://localhost:4000/posts/blog7/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="linux" />
    
  

  <summary>서버를 운영하면서 로그가 계속 쌓여 디스크 용량이 꽉차게 되어 서비스가 중단되는 경험을 하게 되어
로그를 주기적으로 관리해주는 logrotate에 대해서 알아보도록 하겠습니다.

logrotate


리눅스 시스템에서 로그 파일을 자동으로 관리하는 도구이며. 로그 파일이 무한히 커지는 것을 방지하고, 디스크 공간을 효율적으로 사용할 수 있도록 돕습니다.

주요기능

  로그 회전 : 일정 주기마다 새로운 로그 파일을 생성하고, 오래된 로그 파일을 보관
  압축 : 회전된 로그 파일을 압축하여 디스크 공간을 절약
  삭제 : 일정 기간이 지난 로그 파일을 자동으로 삭제
  스크립트 실행 : 로그 회전 후 특정 명령이나 스크립트 실행



  여기서 회전의 의미는 새로운 파일을 생성하다라는 의미


설정하...</summary>

  </entry>

  
  <entry>
    <title>정보처리기사 - 디자인패턴</title>
    <link href="http://localhost:4000/posts/blog9/" rel="alternate" type="text/html" title="정보처리기사 - 디자인패턴" />
    <published>2024-07-22T13:00:00+09:00</published>
  
    <updated>2024-07-22T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog9/</id>
    <content src="http://localhost:4000/posts/blog9/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="정보처리기사" />
    
  

  <summary>참고 : 수제비 정보처리기사 카페

디자인 패턴


소프트웨어 설계에서 공통으로 발생하는 문제에 대해 자주 쓰이는 설계 방법을 정리한 패턴

생성패턴
객체의 인스턴스 생성에 관여하고 클래스 정의와 객체 생성 방식을 구조화, 캡슐화하는 패턴
Abstract Factory (추상 팩토리)

  구체적인 클래스에 의존하지 않고 서로 연관되거나 의존적인 객체들의 조합을 만드는 인터페이스를 제공하는 패턴
  생성된 클래스에서는 사용자에게 인터페이스(API)를 제공하고, 구체적인 구현은 concrete Product 클래스에서 이루어지는 특징을 가지고 있음
    
      key : 동일한 주제의 다른 팩토리를 묶음
    
  


Builder (빌더)

  복잡한 인스턴스를 조립하여 만드는 구조
  복합...</summary>

  </entry>

  
  <entry>
    <title>정보처리기사 - 암호화 알고리즘</title>
    <link href="http://localhost:4000/posts/blog8/" rel="alternate" type="text/html" title="정보처리기사 - 암호화 알고리즘" />
    <published>2024-07-22T13:00:00+09:00</published>
  
    <updated>2024-07-22T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog8/</id>
    <content src="http://localhost:4000/posts/blog8/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="정보처리기사" />
    
  

  <summary>암호화 알고리즘 종류


대칭키 암호화
대칭키 암호화에서는 동일한 키가 암호화와 복호화에 사용됩니다. 빠르고 효율적이지만, 키의 안전한 분배와 관리가 중요합니다.

DES (Data Encryption Standard)

  미국 연방 표준국(NIST)에서 발표한 대칭키 기반의 블록 암호화방식 ( 64bit )
  과거에 널리 사용되었으나 현재는 보안성이 낮아 많이 사용되지 않는다.


AES (Advanced Encryption Standard)

  가장 널리 사용되는 대칭키 암호화 알고리즘 중 하나 DES에서 발전
  128, 192, 256 비트키 지원
  보안성과 성능이 뛰어나며, 미국 정부 표준으로 채택


SEED

  국내에서 개발한 블록 암호화 알고리즘 ( 128bit )
  128bi...</summary>

  </entry>

  
  <entry>
    <title>CS - OSI 7계층 알아보기</title>
    <link href="http://localhost:4000/posts/blog6/" rel="alternate" type="text/html" title="CS - OSI 7계층 알아보기" />
    <published>2024-07-22T13:00:00+09:00</published>
  
    <updated>2024-07-23T17:38:45+09:00</updated>
  
    <id>http://localhost:4000/posts/blog6/</id>
    <content src="http://localhost:4000/posts/blog6/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="CS ( Computer Science )" />
    
  

  <summary>출처 : IT 엔지니어를 위한 네트워크 입문

OSI 7계층에 대해서 알아보기 위해 프로토콜의 개념을 익혀보자.

프로토콜

프로토콜은 규정이나 규약과 관련된 내용을 언급할 때 사용한다. 네트워크에서의 통신 규약도 프로토콜이라는 용어를 사용한다. 
한정된 자원으로 통신을 수행해야 하다 보니 최대한 적은 데이터를 이용해 효율적인 프로토콜을 정의하고 사용해야 했다.  
기존에는 적은 컴퓨팅 자원과 매우 느린 네트워크 속도를 이용했기 때문에 효율을 위해 2진수 비트기반으로 만들어졌다.



OSI 7계층

과거에는 통신용 규약이 표준화되지 않았고 각 벤더에서 별도로 개발했기 때문에 호환되지 않는 시스템이나 애플리케이션이 많아서 통신이 불가능했다. 

이를 하나로 규약으로 통합하려는 노력이 현재의 OSI 7계...</summary>

  </entry>

  
  <entry>
    <title>정보처리기사 - BCP (Business Continuity Planning)</title>
    <link href="http://localhost:4000/posts/blog10/" rel="alternate" type="text/html" title="정보처리기사 - BCP (Business Continuity Planning)" />
    <published>2024-07-22T13:00:00+09:00</published>
  
    <updated>2024-07-22T13:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/blog10/</id>
    <content src="http://localhost:4000/posts/blog10/" />
    <author>
      <name>Choitaeyang</name>
    </author>

  
    
    <category term="정보처리기사" />
    
  

  <summary>비즈니스 연속성 계획 관련 용어 정리


BCP ( Business Continuity Planning )
재난 및 재해 상황을 대비하여 기업의 비즈니스 연속성을 유지하기 위한 업무 복구에 대한 계획

BIA(Business Impact Analysis)

  장애나 재해로 인해 운영상의 주요 손실을 볼 것을 가정하여 시간 흐름에 따른 영향도 및 손실 평가를 조사하는 BCP를 구축하기 위한 비즈니스 영향 분석


RTO(Recovery Time Objective)

  업무 중단 시점부터 업무가 복구 되어 다시 가동 될 때까지의 시간. 재해 시 복구 목표 시간의 선정


RPO(Recovery Point Objective)

  업무 중단 시점부터 데이터가 복구되어 다시 정상가동될 때 데이터의 손실 허...</summary>

  </entry>

</feed>


